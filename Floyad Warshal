   #include<iostream>
   using namespace std;
   #define Max 100
   #define infinity 100000
   ///////////
   void create(int a[Max][Max],int n)
   {
       int i,j;
       for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
            cin>>a[i][j];
       }
   }
   ////////////
   void print(int a[Max][Max],int n)
   {
       int i,j;
       for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
            cout<<a[i][j]<<" ";
            cout<<endl;
       }
   }
   /////////////
   void display(int a[Max][Max],int prev[Max][Max],int n)
   {
       cout<<"previous matrix is "<<endl;
       int i,j;
       for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
            cout<<prev[i][j]<<" ";
            cout<<endl;
       }
       cout<<"shortest path matrix is "<<endl;
       for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
            cout<<a[i][j]<<" ";
            cout<<endl;
       }
   }
   ///////////////
   void floyd(int a[Max][Max],int n)
   {
       int prev[Max][Max];
       int i,j;

       int k;
       for(k=0;k<n;k++)
       {

           if(k==0)
           {

              for(i=0;i<n;i++)
       {
           for(j=0;j<n;j++)
           {
               if(i==j)
                a[i][j]=0;
               else
               {
                    if(a[i][j]==0)
                prev[i][j]=infinity;
                else
                    prev[i][j]=a[i][j];
               }

           }
       }
           }
           else
           {
               for(i=0;i<n;i++)
           {
               for(j=0;j<n;j++)
                prev[i][j]=a[i][j];
           }
           }

           for(i=0;i<n;i++)
           {
               for(j=0;j<n;j++)
               {
                   if(prev[i][j]>prev[i][k]+prev[k][j])
                   {
                       a[i][j]=prev[i][k]+prev[k][j];
                   }
                   else
                    a[i][j]=prev[i][j];
               }
           }

       }
       display(a,prev,n);
   }
   //////////////////
   int main()
   {
       int n;
       cout<<"enter number of vertices"<<endl;
       cin>>n;
       int a[Max][Max];
       create(a,n);
       print(a,n);
       floyd(a,n);
       return 0;
   }
